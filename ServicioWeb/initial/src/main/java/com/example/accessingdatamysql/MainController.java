package com.example.accessingdatamysql;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private PersonaRepository personaRepository;

  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewUser (@RequestParam String name
      , @RequestParam String apellido1, @RequestParam String apellido2, @RequestParam int edad,
      @RequestParam double peso, @RequestParam double estatura, @RequestParam int estado_civil) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    Persona p = new Persona();
    p.setNombre(name);
    p.setApellido_paterno(apellido1);
    p.setApellido_materno(apellido2);
    p.setEdad(edad);
    p.setEstatura(estatura);
    p.setPeso(peso);
    p.setEstado_civil(estado_civil);
    personaRepository.save(p);
    return "Saved";
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<Persona> getAllUsers() {
    // This returns a JSON or XML with the users
    return personaRepository.findAll();
  }
  
  
  /*@GetMapping(path="/persona/{id}/")
  public @ResponseBody Iterable<Persona> getUserByID(ID id) {
    // This returns a JSON or XML with the users
    return personaRepository.findAllById(id);
  }
*/
}